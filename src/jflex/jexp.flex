package ranttu.rapid.jexp.compile.jflex;

import ranttu.rapid.jexp.compile.parse.Token;
import ranttu.rapid.jexp.compile.parse.TokenType;

/**
 * ### WARNING ###
 * this file is generated by src/jflex/jexp.flex, don't modify this directly
 *
 * the lexer generated by jflex
 * @author rapidhere@gmail.com
 */
@SuppressWarnings("all")
%%

%public
%class Lexer
%type Token
%unicode
%line
%column

%{
  private StringBuffer string = new StringBuffer();

  private Token token(TokenType type, Object val) {
      return new Token(type, yyline, yycolumn, val);
  }
%}

InputCharacter = [^\r\n]
WhiteSpace     = [ \t\f]

Identifier = [:jletter:] [:jletterdigit:]*

DecIntegerLiteral = 0 | [1-9][0-9]*
HexIntegerLiteral = 0[xX][0-9]+
OctIntegerLiteral = 0[0-9]+

%state STRING

%%

<YYINITIAL> {
  /* identifiers */
  {Identifier}                   { return token(TokenType.IDENTIFIER, yytext()); }

  /* literals */
  {DecIntegerLiteral}            |
  {OctIntegerLiteral}            |
  {HexIntegerLiteral}            { return token(TokenType.INTEGER, Integer.valueOf(yytext())); }

  \"                             { string.setLength(0); yybegin(STRING); }

  /* operators */
  "+"                            { return token(TokenType.PLUS, yytext()); }

  /* whitespace */
  {WhiteSpace}                   { /* ignore */ }
}

<STRING> {
  \"                             {
                                   yybegin(YYINITIAL);
                                   return token(TokenType.STRING, string.toString());
                                 }
  [^\n\r\"\\]+                   { string.append( yytext() ); }
  \\t                            { string.append('\t'); }
  \\\"                           { string.append('\"'); }
  \\                             { string.append('\\'); }
}

/* error fallback */
[^]                              { throw new Error("unexpected character at line "
                                            + yyline + ", column " + yycolumn + ": " + yytext());
                                 }