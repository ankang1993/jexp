- desc: base string
  exp: '"hello world"'
  res: hello world

- desc: string escaping 1
  exp: '"hello \" world"'
  res: 'hello " world'

- desc: string escaping 2
  exp: '"hello \ world"'
  res: 'hello \ world'

- desc: integer literal
  exp: 10000000
  res: 10000000

- desc: hex literal
  exp: 0x1000
  res: 4096

- desc: oct literal
  exp: 01000
  res: 512

- desc: zero
  exp: 0
  res: 0

- desc: double literal
  exp: 1.0
  res: 1.0

- desc: double zero
  exp: 0.0
  res: 0.0

- desc: simple typed var
  exp: a + b * c
  ctx:
    class: 'ranttu.rapid.jexp.data.SimpleContext'
    a: 12
    b: 123
    c: 23
  res: 2841

- desc: simple mapped var
  exp: a + b * c.c - d
  ctx:
    a: 12
    b: 123
    c:
      c: 23
    d: -10
  res: 2851

- desc: long typed var
  exp: o.o.o.o.o.o.a + o.o.o.o.o.o.o.b * o.o.o.o.o.o.o.o.c
  ctx:
    class: 'ranttu.rapid.jexp.data.ImmutableRecursiveContext'
  res: -749746734

- desc: dynamic type access
  exp: o["some" + "Val"]
  ctx:
    class: 'ranttu.rapid.jexp.data.ImmutableRecursiveContext'
  res: '233'

- desc: dynamic map access
  exp: a + b * c["ccc"] - d
  ctx:
    a: 12
    b: 123
    c:
      ccc: 23
    d: -10
  res: 2851

- desc: dynamic type access - 2
  exp: o[a()]
  ctx:
    class: 'ranttu.rapid.jexp.data.ImmutableRecursiveContext'
  res: 12312312

- desc: dynamic type access - 3
  exp: o["some" + "Val"].empty
  ctx:
    class: 'ranttu.rapid.jexp.data.ImmutableRecursiveContext'
  res: false

- desc: dynamic type access - 4
  exp: a().empty
  ctx:
    class: 'ranttu.rapid.jexp.data.ImmutableRecursiveContext'
  res: false

- desc: array exp
  exp: '["hello", "world"]'
  res:
    - hello
    - world

- desc: and 1
  exp: '0 and "hello world"'
  res: 0

- desc: and 2
  exp: '1 && "hello world"'
  res: "hello world"

- desc: and 3
  exp: 'someVal && b'
  ctx:
    class: 'ranttu.rapid.jexp.data.ImmutableRecursiveContext'
  res: -9798

- desc: or 1
  exp: '0 or "hello world"'
  res: "hello world"

- desc: or 2
  ctx:
    class: 'ranttu.rapid.jexp.data.ImmutableRecursiveContext'
  exp: 'a || b'
  res: 12312312

- desc: misc
  exp: 'a[["key0", "key1"].get(1)]'
  ctx:
    a:
      key0: hello
      key1: world
  res: world